name: Build

on: [push, pull_request]

jobs:
    mac:
        runs-on: macos-latest
        steps:
        - uses: actions/checkout@v1

        - name: Setup
          run: brew install qt5 mosquitto libuv sdl2 libpq sdl2_mixer

        - name: Build
          run: |
            mkdir build
            cd build
            cmake ..
            make -j 2

        - name: Test
          run: |
            cd build
            ctest -V -R tests-animation$
            ctest -V -R tests-attrib$
            ctest -V -R tests-computeshadertool$
            ctest -V -R tests-cooldown$
            ctest -V -R tests-core$
            ctest -V -R tests-eventmgr$
            ctest -V -R tests-math$
            ctest -V -R tests-persistence$
            ctest -V -R tests-poi$
            ctest -V -R tests-shadertool$
            ctest -V -R tests-stock$
            ctest -V -R tests-testtraze$
            ctest -V -R tests-util$
            ctest -V -R tests-uuid$
            ctest -V -R tests-video$
            ctest -V -R tests-voxedit-util$
            ctest -V -R tests-voxel$
            ctest -V -R tests-voxelformat$
            ctest -V -R tests-voxelgenerator$
            ctest -V -R tests-voxelrender$
            ctest -V -R tests-voxelutil$
            ctest -V -R tests-voxelworld$
            ctest -V -R tests-voxelworldrender$

    packages:
        runs-on: ubuntu-20.04
        steps:
        - uses: actions/checkout@v1

        - name: Setup
          run: |
            sudo apt-get update
            sudo apt-get install cmake debhelper devscripts build-essential lintian libsdl2-dev libuv1-dev libsdl2-mixer-dev postgresql-server-dev-all libpq-dev libenet-dev qt5-default qttools5-dev qttools5-dev-tools opencl-c-headers wayland-protocols pkg-config uuid-dev

        - name: Ubuntu
          run: |
            debuild -b -ui -uc -us
            mv ../*.deb .

        - name: Upload the ubuntu artifacts
          uses: actions/upload-artifact@v2
          with:
            name: debian
            path: vengi*.deb

        - name: Upload the ubuntu release artifacts
          if: startsWith(github.ref, 'refs/tags/')
          uses: Roang-zero1/github-upload-release-artifacts-action@master
          with:
            args: vengi*.deb
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    linux:
        runs-on: ubuntu-20.04
        steps:
        - uses: actions/checkout@v1

        - name: Setup
          run: |
            sudo apt-get update
            sudo apt-get install libsdl2-dev postgresql-server-dev-10 libpq-dev libenet-dev qt5-default qttools5-dev qttools5-dev-tools opencl-c-headers wayland-protocols pkg-config uuid-dev

        - name: Linux
          run: |
            mkdir build
            cd build
            cmake ..
            make -j 2

        - name: Test
          run: |
            cd build
            ctest -V -R tests-animation$
            ctest -V -R tests-attrib$
            ctest -V -R tests-computeshadertool$
            ctest -V -R tests-cooldown$
            ctest -V -R tests-core$
            ctest -V -R tests-eventmgr$
            ctest -V -R tests-math$
            ctest -V -R tests-persistence$
            ctest -V -R tests-poi$
            ctest -V -R tests-shadertool$
            ctest -V -R tests-stock$
            ctest -V -R tests-testtraze$
            ctest -V -R tests-util$
            ctest -V -R tests-uuid$
            ctest -V -R tests-video$
            ctest -V -R tests-voxedit-util$
            ctest -V -R tests-voxel$
            ctest -V -R tests-voxelformat$
            ctest -V -R tests-voxelgenerator$
            ctest -V -R tests-voxelrender$
            ctest -V -R tests-voxelutil$
            ctest -V -R tests-voxelworld$
            ctest -V -R tests-voxelworldrender$

    windows:
        runs-on: windows-latest

        steps:
        - uses: actions/checkout@v1

        - name: Setup
          uses: lukka/run-vcpkg@v2
          id: runvcpkg
          env:
            VCPKG_DEFAULT_TRIPLET: x64-windows
            VCPKG_BUILD_TYPE: release
          with:
            vcpkgGitCommitId: 2f7a104d4d6f1f3790db929f85a4086aa6973d7f
            vcpkgTriplet: 'x64-windows'
            vcpkgArguments: 'libpq'

        - name: Build
          env:
            VCPKG_DEFAULT_TRIPLET: x64-windows
            VCPKG_BUILD_TYPE: release
          run: |
            mkdir build
            cd build
            cmake .. -DRCON=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build .
            cmake --install . --component voxedit --prefix voxedit-install
            cmake --install . --component mapview --prefix mapview-install
            cmake --install . --component voxconvert --prefix voxconvert-install

        - name: Tests
          run: |
            cd build
            ctest -V -R tests-animation$
            ctest -V -R tests-attrib$
            ctest -V -R tests-computeshadertool$
            ctest -V -R tests-cooldown$
            ctest -V -R tests-core$
            ctest -V -R tests-eventmgr$
            ctest -V -R tests-math$
            ctest -V -R tests-persistence$
            ctest -V -R tests-poi$
            ctest -V -R tests-shadertool$
            ctest -V -R tests-stock$
            ctest -V -R tests-util$
            ctest -V -R tests-uuid$
            ctest -V -R tests-video$
            ctest -V -R tests-voxedit-util$
            ctest -V -R tests-voxel$
            ctest -V -R tests-voxelformat$
            ctest -V -R tests-voxelgenerator$
            ctest -V -R tests-voxelrender$
            ctest -V -R tests-voxelutil$
            ctest -V -R tests-voxelworld$

        - name: Upload the voxedit artifacts
          uses: actions/upload-artifact@v2
          with:
            name: voxedit
            path: build/voxedit-install/

        - name: Upload the mapview artifacts
          uses: actions/upload-artifact@v2
          with:
            name: mapview
            path: build/mapview-install/

        - name: Upload the voxconvert artifacts
          uses: actions/upload-artifact@v2
          with:
            name: voxconvert
            path: build/voxconvert-install/
