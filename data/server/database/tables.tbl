//
// table descriptions for the databasetool.
//
// the databasetool binary will generate model files for the
// table definitions in this file.
//
// Valid types
// * password
// * string
// * int
// * long
// * timestamp
//
// If no classname is specified, the table name will be used with 'Model' as postfix.
// Example:
// Table user with be UserModel if no other classname was specified
//
// All models will be put into a persistence namespace
//
// table <TABLENAME> {
//   classname <STRING> (overrides the automatically determined name)
//   namespace <STRING> (c++ namespace where the class is put into)
//   field <FIELDNAME> {
//     type <FIELDTYPE>
//     notnull (optional)
//     length <LENGTH> (optional)
//     default <DEFAULTVALUE> (optional)
//   }
//   constraints {
//     <FIELDNAME> unique
//     <FIELDNAME> primarykey
//     <FIELDNAME> autoincrement
//   }
// }

/*
table event {
	namespace backend
	field id {
		type long
	}
	field type {
		type long
		notnull
	}
	field startdate {
		type timestamp
		notnull
	}
	field enddate {
		type timestamp
		notnull
	}
	constraints {
		id primarykey
		id autoincrement
	}
}

table event_point {
	namespace backend
	field userid {
		type long
	}
	field key {
		type string
		notnull
	}
	field points {
		type long
		notnull
	}
	constraints {
		(userid, key) unique
	}
}
*/

table user {
	namespace backend
	field id {
		type long
	}
	field email {
		type string
		notnull
	}
	field password {
		type password
		length 128
		notnull
	}
	field registrationdate {
		type timestamp
		default "NOW()"
		notnull
	}
	constraints {
		email unique
		id primarykey
		id autoincrement
	}
}
