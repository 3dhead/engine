set(SRCS
	SimpleAI.cpp
	aggro/AggroMgr.h
	aggro/Entry.h
	AI.h
	AIFactories.h
	AIRegistry.h
	common/IFactoryRegistry.h
	common/IParser.h
	common/Log.h
	common/Math.h
	common/MemoryAllocator.h
	common/MoveVector.h
	common/NonCopyable.h
	common/Random.h
	common/String.h
	common/Thread.h
	common/ThreadPool.h
	common/ThreadScheduler.h
	common/Types.h
	conditions/And.h
	conditions/ConditionParser.h
	conditions/False.h
	conditions/Filter.h
	conditions/HasEnemies.h
	conditions/ICondition.h
	conditions/IsCloseToGroup.h
	conditions/IsGroupLeader.h
	conditions/IsInGroup.h
	conditions/Not.h
	conditions/Or.h
	conditions/True.h
	filter/IFilter.h
	filter/SelectEmpty.h
	filter/SelectGroupLeader.h
	filter/SelectGroupMembers.h
	filter/SelectHighestAggro.h
	filter/SelectZone.h
	IAIFactory.h
	ICharacter.h
	group/GroupId.h
	group/GroupMgr.h
	movement/SelectionSeek.h
	movement/GroupFlee.h
	movement/GroupSeek.h
	movement/Steering.h
	movement/TargetFlee.h
	movement/TargetSeek.h
	movement/Wander.h
	movement/WeightedSteering.h
	server/AIAddNodeMessage.h
	server/AIChangeMessage.h
	server/AICharacterDetailsMessage.h
	server/AICharacterStaticMessage.h
	server/AIDeleteNodeMessage.h
	server/AINamesMessage.h
	server/AIPauseMessage.h
	server/AISelectMessage.h
	server/AIStateMessage.h
	server/AIStepMessage.h
	server/AIStubTypes.h
	server/AIUpdateNodeMessage.h
	server/AddNodeHandler.h
	server/ChangeHandler.h
	server/DeleteNodeHandler.h
	server/IProtocolHandler.h
	server/IProtocolMessage.h
	server/Network.h
	server/NetworkImpl.h
	server/PauseHandler.h
	server/ProtocolHandlerRegistry.h
	server/ProtocolMessageFactory.h
	server/ResetHandler.h
	server/SelectHandler.h
	server/Server.h
	server/ServerImpl.h
	server/StepHandler.h
	server/UpdateNodeHandler.h
	zone/Zone.h
	SimpleAI.h
	tree/Fail.h
	tree/Limit.h
	tree/Idle.h
	tree/Invert.h
	tree/ITask.h
	tree/ITimedNode.h
	tree/loaders/ITreeLoader.h
	tree/Parallel.h
	tree/PrioritySelector.h
	tree/ProbabilitySelector.h
	tree/RandomSelector.h
	tree/Selector.h
	tree/Sequence.h
	tree/Steer.h
	tree/Succeed.h
	tree/TreeNode.h
	tree/TreeNodeImpl.h
	tree/TreeNodeParser.h
)
set(LIB ai)
add_library(${LIB} ${SRCS})
target_link_libraries(${LIB} lua53 glm)
set_target_properties(${LIB} PROPERTIES FOLDER ${LIB})
target_include_directories(${LIB} PUBLIC .)
if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	target_compile_definitions(${LIB} PRIVATE -DAI_EXCEPTIONS=0 -DTHREAD_LOCAL=static)
else()
	target_compile_definitions(${LIB} PRIVATE -DAI_EXCEPTIONS=0)
endif()
