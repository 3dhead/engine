// Messages that the server sends to the client

include "Shared.fbs";

namespace network;

table Init {
	seed:long;
}

/// email and password validation failed
table AuthFailed {
}

/// this message is sent whenever a user gets into the visible area of another user
table UserSpawn {
	id:long (key);
	name:string (required);
	pos:Vec3;
	rotation:float = 0.0;
}

/// this message is sent whenever an entity (but not an user) is getting into the visible
/// area of a user
table EntitySpawn {
	id:long (key);
	type:EntityType;
	pos:Vec3;
	rotation:float = 0.0;
	animation:Animation;
}

/// sent whenever an entity vanishes from the visible area of an user
/// @note also sent for users
table EntityRemove {
	id:long (key);
}

/// sent whenever an entity updates its state in the visible area of the user that received this
/// also sent for users
table EntityUpdate {
	id:long (key);
	pos:Vec3;
	rotation:float = 0.0;
	animation:Animation;
}

table StartCooldown {
	id:CooldownType (key);
	startUTCMillis:long;
	durationMillis:long;
}

table StopCooldown {
	id:CooldownType;
}

enum AttribMode : byte {
	Percentage,
	Absolute,
}

table AttribEntry {
	type:AttribType;
	value:float;
	mode:AttribMode;
	current:bool = true;
}

table AttribUpdate {
	/// the entity id whose attributes should be updated
	id:long (key);
	/// a list of @c AttribEntry
	attribs:[AttribEntry] (required);
}

union ServerMsgType {
	Init,
	UserSpawn,
	EntitySpawn,
	EntityRemove,
	EntityUpdate,
	AuthFailed,
	AttribUpdate,
	StartCooldown,
	StopCooldown
}

table ServerMessage {
	data:ServerMsgType;
}

root_type ServerMessage;
