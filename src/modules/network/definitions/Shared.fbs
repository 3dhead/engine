// Shared data structures for client and server messages

namespace network;

struct Vec3 {
	x:float;
	y:float;
	z:float;
}

struct Vec2 {
	x:float;
	y:float;
}

struct IVec2 {
	x:int;
	y:int;
}

enum EventType: int {
	NONE,

	GENERIC
}

enum EntityType: int {
	NONE,

	BEGIN_ANIMAL,
	ANIMAL_WOLF,
	ANIMAL_RABBIT,
	MAX_ANIMAL,

	PLAYER,

	BEGIN_CHARACTERS,
	DWARF_MALE_BLACKSMITH,
	HUMAN_MALE_BLACKSMITH,
	HUMAN_MALE_KNIGHT,
	HUMAN_MALE_SHEPHERD,
	HUMAN_MALE_WORKER,
	UNDEAD_MALE_ZOMBIE,
	UNDEAD_MALE_SKELETON,
	MAX_CHARACTERS,
}

enum CooldownType: int {
	NONE,
	// the cooldown for increasing the population
	INCREASE,
	// defines the delay between hunts
	HUNT,
	// the cooldown for removing a disconnected user from the server
	LOGOUT
}

enum PointOfInterestType: int {
	NONE,
	GENERIC,
	FIGHT,
	SPAWN,
	QUEST
}

enum AttribType: int {
	NONE,
	HEALTH,
	// how many fields/voxels can be passed in one second
	SPEED,
	VIEWDISTANCE,
	ATTACKRANGE,
	STRENGTH,
	// field of view in degrees
	FIELDOFVIEW
}

enum ItemType: int {
	NONE,
	WEAPON
}

/// The move direction is a bit mask of the keys that the client currently holds pressed
enum MoveDirection:ubyte (bit_flags) {
	MOVEFORWARD,
	MOVEBACKWARD,
	MOVELEFT,
	MOVERIGHT,
	JUMP
}

enum Animation: ubyte {
	IDLE,
	JUMP,
	RUN,
	GLIDE,
	TOOL
}

table Var {
	name:string (key,required);
	value:string (required);
}

table VarUpdate {
	vars:[Var] (required);
}
